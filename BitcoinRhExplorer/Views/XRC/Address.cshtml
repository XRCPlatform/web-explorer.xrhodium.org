@using BitcoinRhExplorer.Controllers
@using NBitcoin
@model AddressViewModel

@section scripts {
    <script src="/theme/js/library/jquery.simplePagination.js"></script>
    <script type="text/javascript">
        App.setOptions({
            spa: false
        });

        subPage();
        var currentOffset = 0;
        var pagination = false;

        $(document).ready(function () {
            SearchIt(currentOffset);
        });

        function SearchIt(offset) {
            var postData = { address: "@Model.Address.Trim()", offset: offset};

            $('#transactionsData').html('<p>PLEASE WAIT...</p><i class="fa fa-spinner fa-spin fa-3x text-block"></i>');
            
            $.ajax({
                type: 'POST',
                url: '/api/Data/GetAddress/',
                data: JSON.stringify(postData),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (response) {

                    var output = "";
                    var transactions = $.parseJSON(response);

                    if (transactions.TxCount == 0) {
                        output = "<p>Address doesn't exist.</p>";
                    } else {

                        var transactions = $.parseJSON(response);
                        var templateHtml = $('#transactionTemplate').html();

                        if (transactions != null) {
                            for (var i = 0; i < transactions.Txs.length; i++) {
                                var transaction = transactions.Txs[i];
                                var template = templateHtml;
                                var tfrom = "";
                                var tto = "";

                                //TFROM
                                if (transaction.AddressFrom != null) {
                                    for (var n = 0; n < transaction.AddressFrom.length; n++) {
                                        var address = transaction.AddressFrom[n].Address;
                                        if (address == "@Model.Address.Trim()")
                                            address = "<strong>" + address + "</strong>";
                                        tfrom = tfrom + "<tr><td>" + address + "</td></tr>";
                                    }
                                }

                                //TTO
                                if (transaction.AddressTo != null) {
                                    for (var n = 0; n < transaction.AddressTo.length; n++) {
                                        var address = transaction.AddressTo[n].Address;
                                        if (address == "@Model.Address.Trim()")
                                            address = "<strong>" + address + "</strong>";
                                        tto = tto + "<tr><td>" + address + "</td><td class=\"text-right\"><label class=\"status status-block\">" + transaction.AddressTo[n].SatoshiFormatted + "</label></tr>";
                                    }

                                    if (tfrom.length == 0) tfrom = "<tr><td>No Inputs (Newly Generated Coins)</td></tr>";
                                }

                                tfrom = "<tr><td><a href=\"/xrc/tx/" + transaction.Hash + "\">" + transaction.Hash + "</a></td></tr>" + tfrom;
                                tto = "<tr><td colspan=\"2\"><strong>" + transaction.TimeFormatted + "</strong></td></tr>" + tto;
                                tto = tto + "<tr><td></td><td class=\"text-right\"><label class=\"status status-success\">" + transaction.SatoshiFormatted + " XRC</label></td></tr>";

                                template = template.replace("%%THASH", "<a href=\"/xrc/tx/" + transaction.Hash + "\">" + transaction.Hash + "</a>");
                                template = template.replace("%%TBLOCK", "<a href=\"/xrc/block/" + transaction.BlockHash + "\">" + transaction.BlockHash + "</a>");
                                template = template.replace("%%TDATE", transaction.TimeFormatted);
                                template = template.replace("%%TTO", "<table><tbody>" + tto + "</tbody></table>");
                                template = template.replace("%%TFROM", "<table><tbody>" + tfrom + "</tbody></table>");
                                template = template.replace("%%TBTC", transaction.SatoshiFormatted);

                                output = output + template;
                            }

                            if (pagination == false) {
                                $('.pagination').pagination({
                                    items: transactions.TxCount,
                                    itemsOnPage: 20,
                                    useAnchors: false,
                                    onPageClick: function (pageNumber, event) {
                                        currentOffset = (pageNumber - 1) * 20;
                                        SearchIt(currentOffset);
                                    },
                                });
                                pagination = true;
                            }
                        }
                    }
                    $('#transactionsData').html(output);
                }
            });
        }
    </script>
}

<div class="grid grid-responsive grid-12">
    <div class="dashboard-widget">
        <div class="title">
            Address
        </div>
        <div class="content">
            <div id="transactionsData" class="data-table">
                <p>PLEASE WAIT...</p>
                <i class="fa fa-spinner fa-spin fa-3x text-block"></i>
            </div>
            <div id="transactionTemplate" style="display: none;">
                <div class="grid grid-responsive grid-5">
                    <div class="data-table">
                        %%TFROM
                    </div>
                </div>
                <div class="grid grid-responsive grid-2 send-to">
                    <i class="fa fa-arrow-right"></i>
                </div>
                <div class="grid grid-responsive grid-5">
                    <div class="data-table">
                        %%TTO
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="pagination">
            </div>

            <div class="clearfix"></div>
        </div>
    </div>
</div>
<div class="clearfix"></div>
